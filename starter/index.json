[
{
	"uri": "https://developers.devision.io/starter/guides/",
	"title": "Руководства",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://developers.devision.io/starter/guides/installation/",
	"title": "Установка",
	"tags": [],
	"description": "",
	"content": "Рекомендуется запуск с использованием Docker.\nServer version: \u0026#34;3\u0026#34; services: starter-server: image: apisgarpun/apis:starter-server-20201111 restart: always logging: driver: \u0026#34;none\u0026#34; ports: - \u0026#34;28341:28341\u0026#34; - \u0026#34;61616:61616\u0026#34; - \u0026#34;61613:61613\u0026#34; volumes: - ./activemq-data:/usr/app/activemq-data # папка для базы данных activemq - ./starter-server.conf.json:/usr/app/config/starter-server.conf.json # тут ваш конфиг Agent version: \u0026#34;3\u0026#34; services: starter-agent: image: apisgarpun/apis:starter-agent-20201111 network_mode: \u0026#34;host\u0026#34; restart: always logging: driver: none environment: DEBUG_MODE: \u0026#39;true\u0026#39; # Параметр включает расширенное логирование агента для облегчения отладки volumes: - /var/run/docker.sock:/var/run/docker.sock - /:/rootfs - /usr/bin/docker:/usr/bin/docker - /var/run:/var/run - /sys:/sys - /var/lib/docker/:/var/lib/docker - ./agent-config.json:/usr/app/config/starter-agent.conf.json # тут ваш конфиг "
},
{
	"uri": "https://developers.devision.io/starter/guides/configs/",
	"title": "Конфигурационные файлы",
	"tags": [],
	"description": "",
	"content": "Сервер О Dedicated Agents\nЭто не работает так, что мы сказали, что такой-то агент обрабатывает только это. По умолчанию все агенты выполняют все, но можно зароутить некоторые службы на конкретных агентов по лейблам агентов и по taskData признакам Это сделано для поддержки отказоустойчивости по умолчанию. Типа все везде в кластере, а если не так, то пишешь для чего конкретно и где.\nОднако можно создать последнюю секцию без servicePredicates но с роутом по лейблам агентов и там указать агента или группу агентов на которых будет запущено все то, что не подошло верхним роутам\n{ // то, что будет подставлено в заголовок дашборда. ОПЦИОНАЛЬНО \u0026#34;title\u0026#34;: \u0026#34;My App\u0026#34;, // порт, на котором запустится сервер запускатора \u0026#34;port\u0026#34;: \u0026#34;28341\u0026#34;, // порт брокера для связи агент-сервер. ОПЦИОНАЛЬНО. Если не указывать, будет выбран 61616 по умолчанию \u0026#34;brokerBackendPort\u0026#34;: 61616, // порт брокера для пользователей запускатора. ОПЦИОНАЛЬНО. Если не указывать, порт вообще не будет открыт. По сути это экспериментальный порт для сокетов через запускатор \u0026#34;brokerFrontendPort\u0026#34;: 61613, \u0026#34;storage\u0026#34;: { // Админские права нужны, так как запускатор сам создает схемы, таблицы, индексы, хранимки, накладывает патчи на свои таблицы и т.д. // Время ожидания подключения в БД. По умолчанию 30, даже если не задано. Если не сможет подключится, сервис выключается \u0026#34;readyWaitingSeconds\u0026#34;: 30, // имя БД. БД должна быть создана \u0026#34;databaseName\u0026#34;: \u0026#34;myapp.myapp_starter\u0026#34;, // Будет АВТОМАТИЧЕСКИ создана в БД если отсутствует Схема для хранения списка служб, задач и лога патчей. \u0026#34;schemaName\u0026#34;: \u0026#34;job\u0026#34;, // хост PG \u0026#34;host\u0026#34;: \u0026#34;build.myapp.lan\u0026#34;, // порт БД, \u0026#34;port\u0026#34;: \u0026#34;5432\u0026#34;, // логин/пароль СУПЕРПОЛЬЗОАВТЕЛЯ \u0026#34;username\u0026#34;: \u0026#34;myapp\u0026#34;, \u0026#34;password\u0026#34;: \u0026#34;123\u0026#34; }, \u0026#34;services\u0026#34;: [ { // информация по типу ServiceConfig (http://wiki.lan:8090/pages/viewpage.action?pageId=23298662#id-СправочникпоAPI-ServiceConfig) \u0026#34;serviceId\u0026#34;: \u0026#34;Core.LoadVkontakteSuggestions\u0026#34;, \u0026#34;workersCount\u0026#34;: 1, \u0026#34;tasksPerBlock\u0026#34;: 1, \u0026#34;serviceDisplayName\u0026#34;: \u0026#34;My Service DisplayName\u0026#34;, \u0026#34;links\u0026#34;: [ { \u0026#34;text\u0026#34;: \u0026#34;Devision\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://devision.io\u0026#34; } ] }, { \u0026#34;serviceId\u0026#34;: \u0026#34;Core.ImportAccountAndCampaignsYandexDirect\u0026#34;, \u0026#34;workersCount\u0026#34;: 20, // добавляет в очередь пул для force задач, которые, например, надо запускать по клику пользователя // для того, чтобы задачи шли в force очередь, нужно передавать параметр $force: true в data таска \u0026#34;forceWorkersCount\u0026#34;: 20, \u0026#34;tasksPerBlock\u0026#34;: 1, // если нужно временно приостановить службу \u0026#34;status\u0026#34;: \u0026#34;STOPPED\u0026#34;, \u0026#34;links\u0026#34;: [ { \u0026#34;icon\u0026#34;: \u0026#34;fa-search\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://devision.io/meta\u0026#34; }, { \u0026#34;icon\u0026#34;: \u0026#34;fa-google\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://google.com\u0026#34; } ], \u0026#34;uniqueFields\u0026#34;: [ \u0026#34;agencyLocalId\u0026#34; ], // поддерживаются значения: auto, XXXs, XXXm, XXXh. Где XXX - кол-во, например 5s = 5 секунд. auto - формула разброса группы тасков так, чтобы они не стартанули в одно время \u0026#34;renewOnFailTimeout\u0026#34;: \u0026#34;5s\u0026#34;, // макс. кол-во попыток \u0026#34;renewOnFailMaxAttempts\u0026#34;: 2, \u0026#34;subQueues\u0026#34;: { \u0026#34;causes\u0026#34;: [ { \u0026#34;filters\u0026#34;: [ { \u0026#34;taskDataPredicates\u0026#34;: [ { \u0026#34;key\u0026#34;: \u0026#34;foo\u0026#34;, \u0026#34;operator\u0026#34;: \u0026#34;IN\u0026#34;, \u0026#34;values\u0026#34;: [ \u0026#34;777\u0026#34; ] } ], \u0026#34;workersCount\u0026#34;: 2 // где task.data-\u0026gt;foo==777 максимум 2 параллельных потока }, { \u0026#34;taskDataPredicates\u0026#34;: [ { \u0026#34;key\u0026#34;: \u0026#34;foo\u0026#34;, \u0026#34;operator\u0026#34;: \u0026#34;IN\u0026#34;, \u0026#34;values\u0026#34;: [ \u0026#34;42\u0026#34; ] } ], \u0026#34;workersCount\u0026#34;: 1 // где task.data-\u0026gt;foo==42 максимум 1 параллельный поток } ] }, { \u0026#34;filters\u0026#34;: [ { \u0026#34;taskDataPredicates\u0026#34;: [ { \u0026#34;key\u0026#34;: \u0026#34;speed\u0026#34;, \u0026#34;operator\u0026#34;: \u0026#34;IN\u0026#34;, \u0026#34;values\u0026#34;: [ \u0026#34;slow\u0026#34; ] } ], \u0026#34;workersCount\u0026#34;: 10 } ] } ] } } ], \u0026#34;agents\u0026#34;: { // Раздел про выделенные серверы для выполенения отдельного стека задач \u0026#34;dedicatedRoutes\u0026#34;: [ { \u0026#34;description\u0026#34;: \u0026#34;Например мы делаем тяжелые долгие задачи одного агентства на отдельных тачках, но все остальные задачи службы делаем на всех остальных тачках\u0026#34;, \u0026#34;servicePredicates\u0026#34;: [ { \u0026#34;key\u0026#34;: \u0026#34;serviceId\u0026#34;, \u0026#34;operator\u0026#34;: \u0026#34;IN\u0026#34;, \u0026#34;values\u0026#34;: [ \u0026#34;service0\u0026#34;, \u0026#34;service2\u0026#34; ] } ], \u0026#34;routes\u0026#34;: [ { \u0026#34;agentLabelPredicates\u0026#34;: [ { \u0026#34;key\u0026#34;: \u0026#34;dedict_company\u0026#34;, \u0026#34;operator\u0026#34;: \u0026#34;IN\u0026#34;, \u0026#34;values\u0026#34;: [ \u0026#34;rw\u0026#34; ] } ], \u0026#34;taskDataPredicates\u0026#34;: [ { \u0026#34;key\u0026#34;: \u0026#34;company_id\u0026#34;, \u0026#34;operator\u0026#34;: \u0026#34;IN\u0026#34;, \u0026#34;values\u0026#34;: [ \u0026#34;42\u0026#34; ] } ] }, { \u0026#34;agentLabelPredicates\u0026#34;: [ { \u0026#34;key\u0026#34;: \u0026#34;dedict_company\u0026#34;, \u0026#34;operator\u0026#34;: \u0026#34;IN\u0026#34;, \u0026#34;values\u0026#34;: [ \u0026#34;efimov\u0026#34; ] } ], \u0026#34;taskDataPredicates\u0026#34;: [ { \u0026#34;key\u0026#34;: \u0026#34;company_id\u0026#34;, \u0026#34;operator\u0026#34;: \u0026#34;IN\u0026#34;, \u0026#34;values\u0026#34;: [ \u0026#34;111111\u0026#34; ] } ] } ] }, { \u0026#34;description\u0026#34;: \u0026#34;Например мы выделяем под отдульную задачу целый стек машин\u0026#34;, \u0026#34;servicePredicates\u0026#34;: [ { \u0026#34;key\u0026#34;: \u0026#34;serviceId\u0026#34;, \u0026#34;operator\u0026#34;: \u0026#34;IN\u0026#34;, \u0026#34;values\u0026#34;: [ \u0026#34;renew_on_fail\u0026#34; ] } ], \u0026#34;routes\u0026#34;: [ { \u0026#34;agentLabelPredicates\u0026#34;: [ { \u0026#34;key\u0026#34;: \u0026#34;dedict_renew_on_fail\u0026#34;, \u0026#34;operator\u0026#34;: \u0026#34;IN\u0026#34;, \u0026#34;values\u0026#34;: [ \u0026#34;renew_on_fail\u0026#34; ] } ] } ] }, { \u0026#34;description\u0026#34;: \u0026#34;Например мы не хотим засорять выделенные сервера мелкими задачами любых других агентств\u0026#34;, \u0026#34;routes\u0026#34;: [ { \u0026#34;agentLabelPredicates\u0026#34;: [ { \u0026#34;key\u0026#34;: \u0026#34;dedict_company\u0026#34;, \u0026#34;operator\u0026#34;: \u0026#34;IN\u0026#34;, \u0026#34;values\u0026#34;: [ \u0026#34;all\u0026#34; ] } ] } ] } ] } } Агент { \u0026#34;agentName\u0026#34;: \u0026#34;PHP Agent\u0026#34;, // адрес сервера запускатора \u0026#34;server\u0026#34;: \u0026#34;http://127.0.0.1:28341/\u0026#34;, // скрипт, который будет вызывать агент для выполнения задач, \u0026#34;script\u0026#34;: \u0026#34;php /var/www/myapp/WorkerStarter.php\u0026#34;, // метки для определение dedicated routes \u0026#34;labels\u0026#34;: { \u0026#34;mylabel\u0026#34;: \u0026#34;qwerty\u0026#34;, \u0026#34;dedict_company\u0026#34;: \u0026#34;all\u0026#34;, \u0026#34;dedict_renew_on_fail\u0026#34;: \u0026#34;renew_on_fail\u0026#34; } } "
},
{
	"uri": "https://developers.devision.io/starter/guides/public_api_methods/",
	"title": "Публичное API",
	"tags": [],
	"description": "",
	"content": "POST /services/{serviceId}/tasks Добавляет задачу в очередь\nПример вызова\ncurl -X POST \u0026#39;http://build.myapp.lan:28346/services/Core.ImportAccountAndCampaignsYandexDirect/tasks\u0026#39; -H \u0026#39;Accept: application/json\u0026#39; -H \u0026#39;Content-Type: application/json\u0026#39; --data \u0026#39;{\u0026#34;serviceId\u0026#34;:\u0026#34;Core.ImportAccountAndCampaignsYandexDirect\u0026#34;, \u0026#34;data\u0026#34;:{\u0026#34;agencyLocalId\u0026#34;:381}}\u0026#39; serviceId - имя зарегистрированного сервиса data - пользователький набор данных для задачи\nGET /configurations Отдает все настройки сервисов\nPOST /configurations Заставляет перезагрузить конфигурацию\nGET /services/{serviceId}/statistics Возвращает информацию по статистике использования сервиса с последнего запуска\n"
},
{
	"uri": "https://developers.devision.io/starter/",
	"title": "Запускатор",
	"tags": [],
	"description": "",
	"content": "Что такое Запускатор? Запускатор - распределенная система запуска фоновых задач, написанная на языке Java. Разработана в рамках решения проблем с нагрузками проекта Гарпун и в данный момент активно используемая в нем, в AdHands и META.\nСервис призван решать задачи:\n Обеспечить обработку любого количества тасков фиксированным количеством воркеров, тем самым снизив зависимость сервиса от объема тасков Дать возможность переносить часть воркеров на сторонние ноды (распределенное выполнение тасков) Стандартизировать способы обработки тасков и создание новых служб  "
},
{
	"uri": "https://developers.devision.io/starter/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://developers.devision.io/starter/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]